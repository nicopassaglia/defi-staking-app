{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      nicoin: {},\n      bank: {},\n      tetherBalance: '0',\n      nicBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum browser detected! Check out Metamask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var web3, account, networkId, tetherData, tether, balance;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context2.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                _context2.next = 10;\n                return Tether.networks[networkId];\n\n              case 10:\n                tetherData = _context2.sent;\n\n                if (tetherData) {\n                  tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                  this.setState({\n                    tether: tether\n                  });\n                  balance = tether.methods.balanceOf(this.state.account).call();\n                  console.log(balance);\n                }\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context3.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"Hello, World\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","App","props","state","account","tether","nicoin","bank","tetherBalance","nicBalance","stakingBalance","loading","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","setState","net","getId","networkId","networks","tetherData","Contract","abi","address","balance","methods","balanceOf","call","console","log","loadWeb3","loadBlockchainData"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;IAEMC,G;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAC,KADG;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,MAAM,EAAC,EAHI;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,aAAa,EAAC,GALH;AAMXC,MAAAA,UAAU,EAAE,GAND;AAOXC,MAAAA,cAAc,EAAE,GAPL;AAQXC,MAAAA,OAAO,EAAC;AARG,KAAb;AAFgB;AAYjB;;;;;;;;;;qBAGIC,MAAM,CAACC,Q;;;;;AACRD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AACF,oBAAGH,MAAM,CAACE,IAAV,EAAe;AACjBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIf,IAAJ,CAASa,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACH,iBAFK,MAED;AACHJ,kBAAAA,MAAM,CAACK,KAAP,CAAa,kDAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AAIKH,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACEA,IAAI,CAACI,GAAL,CAASC,WAAT,E;;;AAAhBf,gBAAAA,O;AACN,qBAAKgB,QAAL,CAAc;AAAChB,kBAAAA,OAAO,EAACA,OAAO,CAAC,CAAD;AAAhB,iBAAd;;uBACwBU,IAAI,CAACI,GAAL,CAASG,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;;uBAGmBvB,MAAM,CAACwB,QAAP,CAAgBD,SAAhB,C;;;AAAnBE,gBAAAA,U;;AACN,oBAAGA,UAAH,EAAc;AACNpB,kBAAAA,MADM,GACG,IAAIS,IAAI,CAACI,GAAL,CAASQ,QAAb,CAAsB1B,MAAM,CAAC2B,GAA7B,EAAkCF,UAAU,CAACG,OAA7C,CADH;AAEZ,uBAAKR,QAAL,CAAc;AAACf,oBAAAA,MAAM,EAACA;AAAR,mBAAd;AACIwB,kBAAAA,OAHQ,GAGExB,MAAM,CAACyB,OAAP,CAAeC,SAAf,CAAyB,KAAK5B,KAAL,CAAWC,OAApC,EAA6C4B,IAA7C,EAHF;AAIZC,kBAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AAED;;;;;;;;;;;;;;;;;;;;;;;;;uBAIK,KAAKM,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;6BAEA;AACN,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CAFF,CADF;AASD;;;;EAzDeP,S;;AA4DlB,eAAeI,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      account:'0x0',\n      tether: {},\n      nicoin:{},\n      bank: {},\n      tetherBalance:'0',\n      nicBalance: '0',\n      stakingBalance: '0',\n      loading:true,\n    }\n  }\n\n  async loadWeb3(){\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }else if(window.web3){\n        window.web3 = new Web3(window.web3.currentProvider)\n    }else{\n      window.alert('No ethereum browser detected! Check out Metamask');\n    }\n  }\n\n  async loadBlockchainData(){\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({account:account[0]});\n    const networkId = await web3.eth.net.getId();\n\n    //LOAD TETHER CONTRACT\n    const tetherData = await Tether.networks[networkId];\n    if(tetherData){\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n      this.setState({tether:tether});\n      let balance = tether.methods.balanceOf(this.state.account).call();\n      console.log(balance);\n\n    }\n  }\n\n  async UNSAFE_componentWillMount(){\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n  render(){\n    return(\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"text-center\">\n\n          <h1>Hello, World</h1>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}