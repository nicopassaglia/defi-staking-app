{"ast":null,"code":"import _regeneratorRuntime from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport Nicoin from '../truffle_abis/Nicoin.json';\nimport Bank from '../truffle_abis/Bank.json';\nimport Main from './Main.js';\nimport ParticleSettings from './ParticleSettings';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.stakeTokens = function (amount) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.tether.methods.approve(_this.state.bank._address, amount).send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.state.bank.methods.depositTokens(amount).send({\n          from: _this.state.account\n        }).on('transactionHash', function (hash) {\n          _this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    _this.unstakeTokens = function () {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.bank.methods.unstakeTokens().send({\n        from: _this.state.account\n      }).on('transactionHash', function (hash) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      nicoin: {},\n      bank: {},\n      tetherBalance: '0',\n      nicBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum browser detected! Check out Metamask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var web3, account, networkId, tetherData, tether, balance, nicoinData, nicoin, nicBalance, bankData, bank, stakingBalance, bank_name;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context2.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context2.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context2.sent;\n                _context2.next = 10;\n                return Tether.networks[networkId];\n\n              case 10:\n                tetherData = _context2.sent;\n\n                if (tetherData) {\n                  tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                  this.setState({\n                    tether: tether\n                  });\n                  balance = tether.methods.balanceOf(this.state.account).call() //probando then, podes poner await y listo\n                  .then(function (data) {\n                    _this2.setState({\n                      tetherBalance: data.toString()\n                    });\n                  }); //  this.setState({tetherBalance:balance.toString()})\n                } else {\n                  window.alert(\"Error! Tether contract not deployed to the network\");\n                } //LOAD NICOIN TOKEN (REWARD TOKEN)\n\n\n                _context2.next = 14;\n                return Nicoin.networks[networkId];\n\n              case 14:\n                nicoinData = _context2.sent;\n\n                if (!nicoinData) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                nicoin = new web3.eth.Contract(Nicoin.abi, nicoinData.address);\n                this.setState({\n                  nicoin: nicoin\n                });\n                _context2.next = 20;\n                return nicoin.methods.balanceOf(this.state.account).call();\n\n              case 20:\n                nicBalance = _context2.sent;\n                this.setState({\n                  nicBalance: nicBalance.toString()\n                });\n                _context2.next = 25;\n                break;\n\n              case 24:\n                window.alert(\"Error! Nicoin contract not deployed to the network\");\n\n              case 25:\n                _context2.next = 27;\n                return Bank.networks[networkId];\n\n              case 27:\n                bankData = _context2.sent;\n\n                if (!bankData) {\n                  _context2.next = 41;\n                  break;\n                }\n\n                bank = new web3.eth.Contract(Bank.abi, bankData.address);\n                this.setState({\n                  bank: bank\n                });\n                _context2.next = 33;\n                return bank.methods.stakingBalance(this.state.account).call();\n\n              case 33:\n                stakingBalance = _context2.sent;\n                _context2.next = 36;\n                return bank.methods.name().call();\n\n              case 36:\n                bank_name = _context2.sent;\n                console.log(bank_name.toString());\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                _context2.next = 42;\n                break;\n\n              case 41:\n                window.alert(\"Error! Bank contract not deployed to the network\");\n\n              case 42:\n                this.setState({\n                  loading: false\n                });\n\n              case 43:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context3.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var content;\n      {\n        this.state.loading ? content = /*#__PURE__*/React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          style: {\n            margin: '30px',\n            color: 'white'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }\n        }, \"LOADING PLEASE...\") : content = /*#__PURE__*/React.createElement(Main, {\n          tetherBalance: this.state.tetherBalance,\n          nicBalance: this.state.nicBalance,\n          stakingBalance: this.state.stakingBalance,\n          stakeTokens: this.stakeTokens,\n          unstakeTokens: this.unstakeTokens,\n          bank: this.state.bank,\n          account: this.state.account,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        style: {\n          position: 'relative'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: 'absolute'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ParticleSettings, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }\n      }, content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/nicolaspassaglia/eth-course/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","Nicoin","Bank","Main","ParticleSettings","App","props","stakeTokens","amount","setState","loading","state","tether","methods","approve","bank","_address","send","from","account","on","hash","depositTokens","unstakeTokens","nicoin","tetherBalance","nicBalance","stakingBalance","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","net","getId","networkId","networks","tetherData","Contract","abi","address","balance","balanceOf","call","then","data","toString","nicoinData","bankData","name","bank_name","console","log","loadWeb3","loadBlockchainData","content","margin","color","position","maxWidth"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport Nicoin from '../truffle_abis/Nicoin.json';\nimport Bank from '../truffle_abis/Bank.json';\nimport Main from './Main.js';\nimport ParticleSettings from './ParticleSettings';\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      account:'0x0',\n      tether: {},\n      nicoin:{},\n      bank: {},\n      tetherBalance:'0',\n      nicBalance: '0',\n      stakingBalance: '0',\n      loading:true,\n    }\n  }\n\n  stakeTokens = (amount) => {\n    this.setState({loading:true});\n    this.state.tether.methods.approve(this.state.bank._address,amount).send({from:this.state.account}).on('transactionHash', (hash)=>{\n      this.state.bank.methods.depositTokens(amount).send({from:this.state.account}).on('transactionHash',(hash) =>{\n        this.setState({loading:false});\n      })\n    })\n\n  }\n\n  unstakeTokens = () =>{\n    this.setState({loading:true});\n    this.state.bank.methods.unstakeTokens().send({from:this.state.account}).on('transactionHash',(hash) =>{\n      this.setState({loading:false});\n    })\n  }\n\n  async loadWeb3(){\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    }else if(window.web3){\n        window.web3 = new Web3(window.web3.currentProvider)\n    }else{\n      window.alert('No ethereum browser detected! Check out Metamask');\n    }\n  }\n\n  async loadBlockchainData(){\n    const web3 = window.web3;\n    const account = await web3.eth.getAccounts();\n    this.setState({account:account[0]});\n    const networkId = await web3.eth.net.getId();\n\n    //LOAD TETHER CONTRACT\n    const tetherData = await Tether.networks[networkId];\n    if(tetherData){\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n      this.setState({tether:tether});\n      let balance =  tether.methods.balanceOf(this.state.account).call() //probando then, podes poner await y listo\n      .then((data)=>{\n        this.setState({tetherBalance:data.toString()});\n      });\n\n    //  this.setState({tetherBalance:balance.toString()})\n\n    } else{\n      window.alert(\"Error! Tether contract not deployed to the network\");\n    }\n    //LOAD NICOIN TOKEN (REWARD TOKEN)\n    const nicoinData = await Nicoin.networks[networkId];\n    if(nicoinData){\n      const nicoin = new web3.eth.Contract(Nicoin.abi,nicoinData.address);\n      this.setState({nicoin:nicoin});\n      let nicBalance = await nicoin.methods.balanceOf(this.state.account).call();\n      this.setState({nicBalance:nicBalance.toString()});\n    }else{\n      window.alert(\"Error! Nicoin contract not deployed to the network\");\n    }\n\n\n    //LOAD BANK!\n    const bankData = await Bank.networks[networkId];\n    if(bankData){\n      const bank = new web3.eth.Contract(Bank.abi,bankData.address);\n      this.setState({bank:bank});\n      let stakingBalance = await bank.methods.stakingBalance(this.state.account).call();\n      let bank_name = await bank.methods.name().call();\n      console.log(bank_name.toString());\n      this.setState({stakingBalance:stakingBalance.toString()});\n    }else{\n      window.alert(\"Error! Bank contract not deployed to the network\");\n    }\n\n    this.setState({loading:false});\n  }\n\n  async componentDidMount(){\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n  render(){\n    let content;\n    {\n      this.state.loading ?\n      content = <p id='loader' className='text-center' style={{margin:'30px',color:'white'}}>LOADING PLEASE...</p>\n      :\n      content = <Main\n        tetherBalance={this.state.tetherBalance}\n        nicBalance = {this.state.nicBalance}\n        stakingBalance = {this.state.stakingBalance}\n        stakeTokens = {this.stakeTokens}\n        unstakeTokens = {this.unstakeTokens}\n        bank = {this.state.bank}\n        account = {this.state.account}\n        />\n    }\n    return(\n      <div className='App' style={{position:'relative'}}>\n        <div style={{position:'absolute'}}>\n          <ParticleSettings />\n        </div>\n        <Navbar account={this.state.account} />\n        <div className='container-fluid mt-5'>\n          <div className='row'>\n            <main role='main' className='col-lg-12 ml-auto mr-auto' style={{maxWidth:'600px'}}>\n              <div>\n                {content}\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}